CREATE DATABASE SimCanvas;

GO

USE SimCanvas;

GO

CREATE TABLE USUARIOS(
id_usuario INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
name VARCHAR(50) NOT NULL,
address VARCHAR(100) NOT NULL,
dob DATE NOT NULL, 
email VARCHAR(50) NOT NULL,
password VARCHAR(50) NOT NULL,
role VARCHAR(50) NOT NULL
)

CREATE TABLE COURSE (
    course_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    faculty_id INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    description VARCHAR(200) NOT NULL,
    credits INT NOT NULL,
    initialDate DATE NOT NULL,
    finalDate DATE NOT NULL,
    maxStudents INT NOT NULL
);

CREATE TABLE REGISTRO (
    registro_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    student_id INT NOT NULL,
    course_id INT NOT NULL,
    student_name VARCHAR(100) NOT NULL, 
    student_email VARCHAR(100) NOT NULL,
    course_name VARCHAR(100) NOT NULL, 
    FOREIGN KEY (student_id) REFERENCES USUARIOS(id_usuario), -- Se referencia a la tabla USUARIOS
    FOREIGN KEY (course_id) REFERENCES COURSE(course_id)
);

-- AGREGAR ESTE CONSTRAINT PARA QUE NO SE PUEDA REPETIR ESTUDIANTE EN UN CURSO Y CONSTRAINT DE FK
ALTER TABLE REGISTRO 
ADD CONSTRAINT UC_REGISTRO UNIQUE (student_id, course_id),
CONSTRAINT FK_REGISTRO_COURSE FOREIGN KEY (course_id) REFERENCES COURSE(course_id);

CREATE TABLE Attendance (
    attendance_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    student_id INT NOT NULL,
    course_id INT NOT NULL,
    attendance_date DATE NOT NULL,
    is_present BIT NOT NULL,  -- Columna para indicar si el estudiante está presente (1) o ausente (0)
    FOREIGN KEY (student_id) REFERENCES USUARIOS(id_usuario),
    FOREIGN KEY (course_id) REFERENCES COURSE(course_id)
);

CREATE TABLE GROUPS (
    group_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    course_id INT NOT NULL,
    group_name VARCHAR(100) NOT NULL,
    FOREIGN KEY (course_id) REFERENCES COURSE(course_id)
);

CREATE TABLE GROUPMEMBERS (
    groupmembers_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    student_id INT NOT NULL,
    group_id INT NOT NULL,
    FOREIGN KEY (student_id) REFERENCES USUARIOS(id_usuario),
    FOREIGN KEY (group_id) REFERENCES Groups(group_id)
);

CREATE TABLE ASSIGNMENT (
    assignment_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    course_id INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    description VARCHAR(200) NOT NULL,
    due_date DATE NOT NULL,
    CONSTRAINT FK_Assignment_Course FOREIGN KEY (course_id) REFERENCES COURSE(course_id)
);

CREATE TABLE SUBMISSION (
    submission_id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    assignment_id INT NOT NULL,
    student_id INT NOT NULL,
    submission_date DATETIME NOT NULL,
    file_path VARCHAR(255) NOT NULL, -- Assuming file path to the submitted PDF
    grade INT, -- Nullable, as it will be updated after grading
    CONSTRAINT FK_Submission_Assignment FOREIGN KEY (assignment_id) REFERENCES Assignment(assignment_id),
    CONSTRAINT FK_Submission_Student FOREIGN KEY (student_id) REFERENCES USUARIOS(id_usuario)
);
